// <auto-generated />
using System;
using BTL_TTCM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BTL_TTCM.Migrations
{
    [DbContext(typeof(VegetableDbContext))]
    [Migration("20220508092011_addPtoCart")]
    partial class addPtoCart
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BTL_TTCM.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<int>("proID")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("Username");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("BTL_TTCM.Models.Category", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CatName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatId");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("BTL_TTCM.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YourComment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.ToTable("contacts");
                });

            modelBuilder.Entity("BTL_TTCM.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("dateCreate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("OrderId");

                    b.HasIndex("Username");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("BTL_TTCM.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ordersDetail");
                });

            modelBuilder.Entity("BTL_TTCM.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CatId")
                        .HasColumnType("int");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Producer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("oriprice")
                        .HasColumnType("real");

                    b.HasKey("ProductId");

                    b.HasIndex("CatId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("BTL_TTCM.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Role")
                        .HasColumnType("bit");

                    b.HasKey("UserName");

                    b.ToTable("users");
                });

            modelBuilder.Entity("BTL_TTCM.Models.Cart", b =>
                {
                    b.HasOne("BTL_TTCM.Models.User", "User")
                        .WithMany("Cart")
                        .HasForeignKey("Username");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BTL_TTCM.Models.Order", b =>
                {
                    b.HasOne("BTL_TTCM.Models.User", "User")
                        .WithMany("Order")
                        .HasForeignKey("Username");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BTL_TTCM.Models.OrderDetail", b =>
                {
                    b.HasOne("BTL_TTCM.Models.Order", "order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId");

                    b.HasOne("BTL_TTCM.Models.Product", "product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId");

                    b.Navigation("order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("BTL_TTCM.Models.Product", b =>
                {
                    b.HasOne("BTL_TTCM.Models.Category", "Category")
                        .WithMany("products")
                        .HasForeignKey("CatId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BTL_TTCM.Models.Category", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("BTL_TTCM.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BTL_TTCM.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BTL_TTCM.Models.User", b =>
                {
                    b.Navigation("Cart");

                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
